## Installing FFmpeg for Topaz Labs Products

### Windows

You will need the following dependencies to build on Windows:
- Windows SDK
- Visual Studio 2017 or newer
- MSVC >= v14.12
- MSYS2

You may also find it helpful to have the following:
- Intel Graphics Driver (for QSV support)
- CUDA Toolkit (for nvenc/nvdec support)

1. Install the required dependencies
  - When installing MSYS2, make sure you install pkg-config instead of pkgconf

2. Download the Intel MSDK from [here](https://github.com/Intel-Media-SDK/MediaSDK)
  - Build the Media SDK dispatcher (libmfx_vs2015) for Windows, using the instructions at the [Media SDK Wiki](https://github.com/Intel-Media-SDK/MediaSDK/wiki/Media-SDK-dispatcher-for-Windows)
  - Make sure you change your configuration to build a 'Static library (.lib)' for x64 Release
    - This seems to be the default output if you run `msbuild AllBuild.sln -target:libmfx_vs2015 -p:Configuration=Release`

3. Open a Visual Studio x64 Native Tools Command Prompt
  - Step 4 will be executed in this Command Prompt

4. Navigate to your MSYS2 install and run mingw64
  - Future steps will be run in the window that this opens

5. Navigate to this repository

6. Execute `source build-scripts/setup-msvc-toolchain.sh`

7. Determine where you wish for additional dependencies to be installed. Then execute `export DEPENDENCIES_DIR=/path/to/place/dependencies`

8. Run `bash build-scripts/install-dependencies.sh`
  - This will install additional libraries needed to build with our desired feature set. You *MUST* already have the dependencies at the top of this document properly installed.

9. Find the libmfx_vs2015.lib you created in step 2. Rename it to libmfx.lib and place it in `${DEPENDENCIES_DIR}/msdk-lib`

10. Find and note the location of your aiengine.lib and veai.lib files.

11. Determine which features you will enable. We use all of the following:
  - `--enable-nvenc` CUDA encoders
  - `--enable-nvdec` CUDA decoders
  - `--enable-amf` AMD Advanced Meda Framework
  - `--enable-libmfx` Intel Media SDK
  - `--enable-zlib` zlib, required for some encoders/decoders
  - `--disable-vulkan` Disables Vulkan support. *At the time of writing, this is required*

12. In the root of this repository, run the configure command with your options. We use the following command to enable all our desired features:
```
./configure --toolchain=msvc --prefix=/path/to/install/to --enable-shared --enable-nvenc --enable-nvdec --disable-vulkan \
 --enable-amf --enable-libmfx --enable-zlib \ 
 --extra-cflags="-I${DEPENDENCIES_DIR}/nv_sdk -I${DEPENDENCIES_DIR}/include -I/mingw64/include -I/path/to/folder/with/aiengine/sources/veai" \
 --extra-ldflags="-libpath:${DEPENDENCIES_DIR}/nv_sdk -libpath:${DEPENDENCIES_DIR}/msdk-lib -libpath:${DEPENDENCIES_DIR}/zlib-binary -libpath:/path/to/folder/with/aiengine/lib/files" \
 --extra-libs="aiengine.lib veai.lib"
```

If you wish to enable another feature, or disable a specific feature, make sure to add the corresponding option to the command

13. Run the following:
```
make -r -j8
make -r install
```

14. ffmpeg is now installed to `/path/to/install/to`. You may need to copy the dll files from your VEAI install into the `/path/to/install/to/bin` folder to run the program.
