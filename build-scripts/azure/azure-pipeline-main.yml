resources:
  repositories:
    - repository: nv-codec-headers
      type: github
      endpoint: TopazLabs
      name: FFmpeg/nv-codec-headers
      ref: refs/tags/n12.1.14.0

parameters:
  - name: version
    displayName: 'VERSION'
    type: string
    default: '0.0.0'
  - name: publish
    displayName: 'PUBLISH'
    type: boolean
    default: false
  - name: windows
    displayName: 'Windows (2019)'
    type: boolean
    default: true
  - name: linux
    displayName: 'Linux (Ubuntu 22.04)'
    type: boolean
    default: true
  - name: mac
    displayName: 'MacOS'
    type: boolean
    default: true

variables:
  - name: VERSION
    value: ${{ parameters.version }}
  - ${{ if eq(parameters.publish, true) }}:
    - name: PUBLISH
      value: 'true'
    - ${{ if not(eq(parameters.version, '0.0.0'))}}:
      - name: TAGABLE
        value: 'true'
    - ${{ if eq(parameters.version, '0.0.0')}}:
      - name: TAGABLE
        value: ''
  - ${{ if eq(parameters.publish, false) }}:
    - name: PUBLISH
      value: ''

stages:
- stage: Build
  condition: or(eq(variables['TAGABLE'], 'true'), eq(variables['PUBLISH'], ''))
  jobs:
  - ${{ if eq(parameters.windows, true) }}:
    - job: Windows2019
      workspace:
        clean: all
      strategy:
        matrix:
          windows:
            imageName: 'windows-2019'
      pool:
        vmImage: $(imageName)
      steps:
        - template: win.yml

  - ${{ if eq(parameters.linux, true) }}:
    - job: Ubuntu22_04
      workspace:
        clean: all
      pool:
        name: UbuntuVMSS
      steps:
        - template: ubuntu.yml

  - ${{ if eq(parameters.mac, true) }}:
    - job: Mac
      workspace:
        clean: all
      pool:
        name: Mac
        demands:
        - AppleSilicon
      steps:
        - template: macos.yml
- ${{ if eq(parameters.publish, true) }}:
  - stage: Tag
    condition: succeeded('Build')
    jobs:
    - job: Tagging
      steps:
        - checkout: self
          persistCredentials: true
        - bash: |
            cd "$(Build.SourcesDirectory)/"
            git tag "topaz-v$(VERSION)"
            git push --tags  
          displayName: Tag
          
      pool: 
        name: UbuntuVMSS
