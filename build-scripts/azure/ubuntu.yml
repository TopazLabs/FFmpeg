steps:
  - checkout: self
  - checkout: nv-codec-headers
  
  - template: set_tools_and_deps.yml
    parameters:
      OS: 'linux'
      SHOULD_RESTORE_CONAN_CACHE: false
      
  - bash: |
      cd "$(Build.SourcesDirectory)/nv-codec-headers"
      sudo make install
    displayName: Install nv-codec-headers
      
  - bash: |
      cd "$(Build.SourcesDirectory)/FFmpeg"
      git apply ./build-scripts/configure-zimg.patch
      bash ./build-scripts/linux/conan_linux.sh
    displayName: Install conan packages
    
  - bash: |
      cd "$(Build.SourcesDirectory)/FFmpeg"
      echo ./configure --enable-shared --disable-ffplay --disable-libxcb --disable-vulkan --disable-sdl2 --disable-xlib --enable-tvai --enable-libvpx --enable-libaom --enable-libzimg --enable-nvenc --enable-nvdec --extra-cflags="-I./conan/include -I./conan/include/videoai" --extra-ldflags="-Wl,-rpath,./conan/lib/ -L./conan/lib" --prefix=./output-conan/
      set -e
      ./configure --enable-shared --disable-ffplay --disable-libxcb --disable-vulkan --disable-sdl2 --disable-xlib --enable-tvai --enable-libvpx --enable-libaom --enable-libzimg --enable-nvenc --enable-nvdec --extra-cflags="-I./conan/include -I./conan/include/videoai" --extra-ldflags="-Wl,-rpath,./conan/lib/ -L./conan/lib" --prefix=./output-conan/
      
      make clean
      make -j$(nproc) install
      
      if [[ "${BUILD_REASON}" == "PullRequest" || -z "${PUBLISH}" ]]; then
        exit 0
      else
        cd build-scripts
        conan export-pkg deploy_conanfile.py \
            --name topaz-ffmpeg --version "$(VERSION)" \
            -pr:b profile_ubuntu22.04 -pr:h profile_ubuntu22.04 \
            -s build_type=Release -c user.profile_name=../output-conan
        conan upload "topaz-ffmpeg/$(VERSION)" -r topaz-conan
      fi
    displayName: Build FFmpeg
